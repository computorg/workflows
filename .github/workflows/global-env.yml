name: global-env

on:
  workflow_call:

jobs:
  dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: check environment files
        id: check-env-files
        env:
            paths-python: $HOME/micromamba/envs/micromamba
            paths-r: |
              renv.lock
              renv
              .Rprofile
              /opt/R
              /usr/local/bin/R
              /usr/local/bin/Rscript
            paths-julia: |
              Manifest.toml
              Project.toml

        run: |
          touch activate_env.sh
          touch paths.sh
          touch tohash.txt
          if [[ -f requirements.txt ]]; then
            echo "env-file=requirements.txt" >> $GITHUB_OUTPUT
            cat requirements.txt >> tohash.txt
          fi
          if [[ -f environment.yml ]]; then
            echo "env-file=environment.yml" >> $GITHUB_OUTPUT
            cat environment.yml >> tohash.txt
          fi
          if [[ -f environment.yml ]] || [[ -f requirements.txt ]]; then
            echo "python=true" >> $GITHUB_OUTPUT
            echo "${{ env.paths-python }}" >> paths.sh
            echo "echo \"QUARTO_PYTHON=/home/runner/micromamba/envs/micromamba/bin/python\" > \$GITHUB_ENV" >> activate_env.sh
            echo "echo \"RETICULATE_PYTHON=/home/runner/micromamba/envs/micromamba/bin/python\" > \$GITHUB_ENV" >> activate_env.sh
            echo "echo \"PATH=/home/runner/micromamba/envs/micromamba/bin:\$PATH\" >> \$GITHUB_ENV" >> activate_env.sh
          fi            
          if [[ -f renv.lock ]]; then
            echo "r=true" >> $GITHUB_OUTPUT
            echo "${{ env.paths-r }}" >> paths.sh
            cat renv.lock >> tohash.txt
            if [[ ! -d renv ]]; then
              mkdir $GITHUB_WORKSPACE/renv
            fi
            ln -s $GITHUB_WORKSPACE/renv /home/runner/work/_temp
            echo "sudo apt-get update -y && sudo apt-get install -y qpdf devscripts ghostscript libblas3 liblapack3" >> activate_env.sh
          fi
          if [[ -f Project.toml ]]; then
            echo "julia=true" >> $GITHUB_OUTPUT
            echo "${{ env.paths-julia }}" >> paths.sh
            cat Project.toml >> tohash.txt
          fi        

          cachepath=$(jq -crRs '@json' <<< "$(cat paths.sh)")
          echo "cache-path=$cachepath" >> $GITHUB_OUTPUT
          echo "echo cache-path='$cachepath' >> \$GITHUB_OUTPUT" >> activate_env.sh

          sha256=$(shasum -a 256 tohash.txt | awk '{ print $1 }')
          echo "key=$sha256" >> $GITHUB_OUTPUT
          echo "echo \"key=$sha256\" >> \$GITHUB_OUTPUT" >> activate_env.sh
                    
      - name: Check Cache already exists
        id: check-cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ fromJson(steps.check-env-files.outputs.cache-path) }}
          key: ${{ steps.check-env-files.outputs.key }}
          lookup-only: true

      - name: Set up R
        if: steps.check-cache.outputs.cache-hit != 'true' && steps.check-env-files.outputs.r == 'true'
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.5.1'
          Ncpus: 2

      - name: Set up Julia
        if: steps.check-env-files.outputs.julia == 'true'
        uses: julia-actions/setup-julia@v2
        with:
          version: '1.11'

      - name: Install Julia Dependencies (no cache)
        if: steps.check-env-files.outputs.julia == 'true'
        uses: julia-actions/julia-buildpkg@v1

      - name: install any manual dependencies from setup-env-ci.sh
        if: steps.check-cache.outputs.cache-hit != 'true'
        run: |
          if [[ -f setup-env-ci.sh ]]; then
            bash setup-env-ci.sh
          fi

      - name: Install R Dependencies with renv (no cache)
        if: steps.check-cache.outputs.cache-hit != 'true' && steps.check-env-files.outputs.r == 'true'
        uses: r-lib/actions/setup-renv@v2
        with:
          bypass-cache: true
  
      - name: Set up micromamba (no cache)
        if: steps.check-cache.outputs.cache-hit != 'true' && steps.check-env-files.outputs.python == 'true'
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ${{ steps.check-env-files.outputs.env-file }}
          environment-name: micromamba
          cache-environment: false
          cache-downloads: false

      - name: Check Cache
        if: steps.check-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
            path: |
                ${{ fromJson(steps.check-env-files.outputs.cache-path) }}
            key: ${{ steps.check-env-files.outputs.key }}
  
      - name: Deploy an artifact
        uses: actions/upload-artifact@v4
        with: 
          name: artifact-env
          path: activate_env.sh
